<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        u//Cu7v/wru7/8K7u//Evb3/v7m5/yspKeYAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXqeTc
        3P/s39//6Nzc/+jc3P/o3Nz/6Nzc/+jc3P/o3Nz/6Nzc/+jc3P/o3Nz/6Nzc/+jc3P/o3Nz/6Nzc/+jc
        3P/o3Nz/6Nzc/+jc3P/o3Nz/6Nzc/+fb2//88vL/XVtb+QAAADoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWFhap3dfX/+bb2//i2Nj/4tjY/+LY2P/i2Nj/4tjY/+LY2P/i2Nj/4tjY/+LY2P/i2Nj/4tjY/+LY
        2P/i2Nj/4tjY/+LY2P/i2Nj/4tjY/+LY2P/i2Nj/4tfX//Tr6/9aWFj2AAAAOAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABYWFqne19f/6N3d/+Ta2v/k2tr/5Nra/+Ta2v/k2tr/5Nra/+Ta2v/k2tr/5Nra/+Ta
        2v/k2tr/5Nra/+Ta2v/k2tr/5Nra/+Ta2v/k2tr/5Nra/+Ta2v/k2dn/9u3t/1pYWPYAAAA4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFhYWqeDa2v/q4OD/5tzc/+bc3P/m3Nz/5tzc/+bc3P/m3Nz/5tzc/+bc
        3P/m3Nz/5tzc/+bc3P/m3Nz/5tzc/+bc3P/m3Nz/5tzc/+bc3P/m3Nz/5tzc/+bb2//37+//WllZ9gAA
        ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhap4dzc/+zj4//o39//6N/f/+jf3//o39//6N/f/+jf
        3//o39//6N/f/+jf3//o39//6N/f/+jf3//o39//6N/f/+jf3//o39//6N/f/+jf3//o39//6N/f//nx
        8f9bWVn2AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFqni3d3/7ubm/+ri4v/q4uL/6uLi/+ri
        4v/q4uL/6uLi/+ri4v/q4uL/6uLi/+ri4v/q4uL/6uLi/+ri4v/q4uL/6uLi/+ri4v/q4uL/6uLi/+ri
        4v/q4uL/+/T0/1taWvYAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWqePf3//w6en/7OXl/+zl
        5f/s5eX/7OXl/+zl5f/s5eX/7OXl/+zl5f/s5eX/7OXl/+zl5f/s5eX/7OXl/+zl5f/s5eX/7OXl/+zl
        5f/s5eX/7OXl/+zl5f/99vb/W1pa9gAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhap5eHh//Ls
        7P/u6Oj/7ujo/+7o6P/u6Oj/7ujo/+7o6P/u6Oj/7ujo/+7o6P/u6Oj/7ujo/+7o6P/u6Oj/7ujo/+7o
        6P/u6Oj/7ujo/+7o6P/u6Oj/7ujo//75+f9cW1v2AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYW
        Fqnm4uL/9e/v//Hr6//x6+v/8evr//Hr6//x6+v/8evr//Hr6//x6+v/8evr//Hr6//x6+v/8evr//Hr
        6//x6+v/8evr//Hr6//x6+v/8evr//Hr6//x6+v///z8/1xbW/YAAAA4AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFxYWqefk5P/28fH/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt
        7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f///f3/XFtb9gAAADgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAXFhap5+Tk//bx8f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt
        7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t//Lt7f/y7e3/8u3t///9/f9cW1v2AAAAOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABcWFqbp5ub/+PPz//Tv7//07+//9O/v//Tv7//07+//9O/v//Tv
        7//07+//9O/v//Tv7//07+//9O/v//Tv7//07+//9O/v//Tv7//07+//9O/v//Tv7//07+///////11c
        XPYAAAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBwcHvd3Y2P/y7Oz/6uTk/+Pe3v/j3t7/6+Xl/+7o
        6P/p5OT/493d/+Te3v/s5ub/7ujo/+jj4//j3d3/5N/f/+zm5v/u6Oj/5+Li/+Pd3f/l39//7efn/+3o
        6P/07+//T01N9wAAAEYAAAAAAAAAAAAAAAAAAAAAAAAAKC0rK+loaGj+X11d/0ZFRf9cWlr/ko6O/5KO
        jv9cW1v/RURE/2JgYP+TkJD/kIyM/1dWVv9FRET/aGZm/5WRkf+NiYn/U1FR/0ZFRf9ubGz/lZGR/4mG
        hv9PTk7/RkZG/3t4eP9hXl7/AAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAzgn9/+/////90dHT/VVZW/7Kw
        sP//////6ubm/2tra/9YWVn/wL29///////f3Nz/ZGRk/1tcXP/Nysr//////9TQ0P9eX1//YGFh/9nW
        1v//////x8TE/1pbW/9nZ2f/7Onp/9PPz/8AAACjAAAAAAAAAAAAAAAAAAAAAAAAAC5vb2/3z83N/5CL
        i/+empr/5+fn/+/v7//EwcH/ko2N/6SgoP/r6+v/7+/v/7y5uf+RjIz/qaam/+7u7v/u7+//tLCw/5GM
        jP+wra3/8PDw/+7u7v+tqan/kYyM/7e1tf/x8vL/vr6+/wAAAKcAAAAAAAAAAAAAAAAAAAAAAAAASlFN
        Tf1jXV3/IiAg/xQTE/8PDw/pDAwMyA8ODq8UEhKgFxYWnhcYGKEWFhakExISphQTE6cXFhanFxcXpxYW
        FqcTERGnFBMTpxcXF6cXFxenFhYWpxMREacUExOnGBcXpxcXF6cSEhKnAAAATQAAAAAAAAAAAAAAAAAA
        AAAGBgaWycHB/+Xb2/9NS0v/Jicn/zs4OPg5NTXgDQwMtgAAAH0AAABEAAAAFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB0dHebZ2dn/vry8/2RjY/9kZGT/1M3N//Xo6P+xqKj/Li4u/xkZGf8eHBzlCQkJtgAA
        AHwAAABEAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBUQwMDJMjIiLRPDo6+nVzc//o5+f//////6ilpf9VVlb/Xl5e/8/G
        xv/Lv7//cGpq/xMTE/wHBwfbAAAAqQAAAG8AAAA5AAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAnAAAAYhMTE6NCQkLcTEtL/1pX
        V/+opqb///////////+LiIj/R0hI/1xaWv+0qan/iH9//zAuLvYEBATRAAAAnAAAAGEAAAAuAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgAAAA0AAAAcR4eHrJUVFTniIeH/2hmZv9qaGj/x8XF///////48PD/bGpq/zg5Of9UUVH/enJy/z87
        O+8KCgrGAAAAjgAAAFQAAAAkAAAACQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAABBAwICgRkYGMBfX1/wpqam/7Szs/9ta2v/a2pq/9PP
        z///+/v/29HR/0tKSv8oKSn/PTo6/zMvL+cBAACHAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAABPAwMDkB4d
        Hc1GRET4sLCw/+jo6P+4t7f/YmFh/2RkZP/g19f/sqmp/wAAAIsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACQAAABbEBAQnCcmJtQ/PT34e3l5/+7u7v92dXX/AAAAQwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAADcAAAB7ICAgyBQUFNQAAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////8AAAB/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AA
        AAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPgAAADwAAAA8AAAAPAAAADwAAAA8AH///AAH//wAAH//gA
        AH//gAAP//AAB///AAf///AH////B///////////
</value>
  </data>
</root>